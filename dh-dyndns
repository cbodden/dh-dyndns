#!/bin/bash

# vim:set ts=2 sw=4 noexpandtab:
# <cesar@pissedoffadmins.com> 2013

set -e
set -o pipefail
NAME=$(basename $0)

version()
{
  local VER="0.01"
  printf -- "%s\n" "${NAME} version ${VER}"
  printf -- "%s\n" "Copyright (C) 2013 cesar@pissedoffadmins.com"
  printf -- "%s\n" "This program comes with ABSOLUTELY NO WARRANTY."
  printf -- "%s\n" "This is free software, and you are welcome to redistribute it."
  printf -- "%s\n"
}

descrip()
{
  cat <<EOL
Stuff Stuff
EOL
}

usage()
{
  cat <<EOL
Usage : ${0##*/}
EOL
}

failexit()
{
  version; descrip; usage; exit 1;
}

### the meaty nougat begins here.

# test for wget & uuidgen
[ ! -z $(which wget) ] && WGET="wget -O- -q " ||
  { printf -- "%s\n" "Missing wget"; failexit; }
[ ! -z $(which uuidgen) ] || { printf -- "%s\n" "Missing uuidgen"; failexit; }

case "$(uname 2>/dev/null)" in
  'Linux') TMP_FILE=$(mktemp --tmpdir dhdns.$$.XXXXXXXXXX);;
  'Darwin') TMP_FILE=$(mktemp dhdns.$$.XXXXXXXXXX);;
esac
trap "rm -rf ${TMP_FILE}" 0 1 2 3 15

# process $# if exist
while [ $# -ne 0 ]; do
  A=${1}; B=${2};
  case "${A}" in
    "-k"|"--key"|"key") KEY="${B}"; shift;;
    "-d"|"--domain"|"domain") DOMAIN="${B}"; shift;;
    "-a"|"--api"|"api") API="${B}"; shift;;
    "-o"|"--option"|"option") OPTION="${B}"; shift;;
  esac
  shift;
done

# this section checks for $# hardcoded
[ -z ${KEY} ] && KEY="<SET API KEY HERE TO AUTOMATE>"
[ -z ${DOMAIN} ] && DOMAIN="<DOMAIN NAME TO UPDATE>"
[ -z ${API} ] && API="https://api.dreamhost.com/"

wanIP=$(wget http://ipecho.net/plain -O- -q) ||
  { printf -- "%s\n" "cant grab wanip"; failexit; }

# set dns list api var
LIST="&cmd=dns-list_records&"

existIP=`${WGET} ${API}?key=${KEY}\&unique_id=$(uuidgen)${LIST} | \
  grep ${DOMAIN} | awk '{ print $5 }'`

listINFO()
{
  ${WGET} ${API}?key=${KEY}\&unique_id=$(uuidgen)${LIST} | \
    grep ${DOMAIN}
}

diffINFO()
{
  if [ ${wanIP} = ${existIP} ]; then
    printf -- "%s\n" "IP address is the same"
  else
    printf -- "%s\n" "IP address is different"
  fi
}

updateINFO()
{
  # set dns add and remove
  REMOVE="&cmd=dns-remove_record&record=${DOMAIN}&type=A&value=${existIP}&"
  ADD="&cmd=dns-add_record&record=${DOMAIN}&type=A&value=${wanIP}&"
  if [ ${wanIP} = ${existIP} ]; then
    printf -- "%s\n" "IP address is the same"
  else
    printf -- "%s\n" "Updating ${DOMAIN} with IP ${wanIP} from ${existIP}."
    ${WGET} ${API}?key=${KEY}\&unique_id=$(uuidgen)${REMOVE}
    ${WGET} ${API}?key=${KEY}\&unique_id=$(uuidgen)${ADD}
    printf -- "%s\n" "Finished." "Record is now:"
    printf -- "%s\n" "$(listINFO)"
  fi
}

case "${OPTION}" in
  "check") diffINFO ;;
  "update") updateINFO ;;
  "delete") deleteINFO ;;
  "add") printf -- "%s\n" "adding soon" ;;
  "exist") echo ${existIP} ;;
  "list"|*) listINFO ;;
esac
