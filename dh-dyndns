#!/bin/bash

# vim:set ts=2 sw=4 noexpandtab:
# <cesar@pissedoffadmins.com> 2013

set -e
set -o pipefail
NAME=$(basename $0)

version()
{
  local VER="0.2"
  cat <<EOL
${NAME} version ${VER}
Copyright (C) 2013 cesar@pissedoffadmins.com
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it.

EOL
}

descrip()
{
  cat <<EOL
This script uses your dreamhost api key (assuming it has dns access), to
either check, delete, list, or update your ip address for a give record
in dreamhost. Makes dynamic dns possible with dreamhost except for the
four hour time to live (ttl). If you need a faster dynamic dns service,
try DynDNS.

EOL
}

usage()
{
  cat <<EOL
Usage : ${0##*/} [option] <value>
  Options:
    -h | --help   | help        shows this message
    -d | --domain | domain      domain which will be used (ex.: foo.bar.baz)
    -k | --key    | key         dreamhost api key
    -o | --option | option      actions to perform. listed below

  Actions:
    check           this checks whether existing ip is same as new.
    delete          this will delete record.
    exist           this will show you the existing ip address in record.
    list            shows you existing record according to domain.
    new             this will show you the new ip.
    update          this performs update of ip address according to whatever is
                    grabbed by check in script.

Sample Usage:
  update record: ${0##*/} -k ################ -d foo.bar.baz -o update

  check record : ${0##*/} -k ################ -d foo.bar.baz -o check

  update record: ${0##*/} -k ################ -d foo.bar.baz -o update

  help         : ${0##*/} -h

EOL
}

failexit()
{
  version; descrip; usage; exit 1;
}

### the meaty nougat begins here.

if [ $# -eq 1 ]; then
  case "${1}" in
    "-h"|"--help"|"help") usage; exit ;;
  esac
fi

# test for wget & uuidgen
[ ! -z $(which wget) ] && WGET="wget -O- -q " ||
  { printf -- "%s\n" "Missing wget"; failexit; }
[ ! -z $(which uuidgen) ] || { printf -- "%s\n" "Missing uuidgen"; failexit; }

# process $# if exist
while [ $# -ne 0 ]; do
  A=${1}; B=${2};
  case "${A}" in
    "-k"|"--key"|"key") KEY="${B}"; shift;;
    "-d"|"--domain"|"domain") DOMAIN="${B}"; shift;;
    "-a"|"--api"|"api") API="${B}"; shift;;
    "-o"|"--option"|"option") OPTION="${B}"; shift;;
  esac
  shift;
done

# this section checks for $# hardcoded and fails if both not hard coded or
# specified from command line, api should remain hard coded but option is there
# to remove it
[ -z ${KEY} ] && KEY=""
[ -z ${DOMAIN} ] && DOMAIN=""
[ -z ${API} ] && API="https://api.dreamhost.com/"
[ -z ${KEY} ] || [ -z ${DOMAIN} ] &&
  { printf -- "%s\n" "Domain or Key not set." ""; failexit; }

wanIP()
{
  wget http://ipecho.net/plain -O- -q ||
    { printf -- "%s\n" "cant grab wanip"; failexit; }
}

# set dns list api var
LIST="&cmd=dns-list_records&"

existIP()
{
  ${WGET} ${API}?key=${KEY}\&unique_id=$(uuidgen)${LIST} | \
    grep ${DOMAIN} | awk '{ print $5 }'
}

listINFO()
{
  ${WGET} ${API}?key=${KEY}\&unique_id=$(uuidgen)${LIST} | grep ${DOMAIN}
}

diffINFO()
{
  if [ $(wanIP) = $(existIP) ]; then
    printf -- "%s\n" "IP address is the same"
  else
    printf -- "%s\n" "IP address is different"
  fi
}

updateINFO()
{
  # set dns add and remove
  ADD="&cmd=dns-add_record&record=${DOMAIN}&type=A&value=$(wanIP)&"
  REMOVE="&cmd=dns-remove_record&record=${DOMAIN}&type=A&value=$(existIP)&"
  if [ $(wanIP) = $(existIP) ]; then
    printf -- "%s\n" "IP address is the same."
  else
    printf -- "%s\n" "Updating ${DOMAIN} with IP $(wanIP) from $(existIP)."
    ${WGET} ${API}?key=${KEY}\&unique_id=$(uuidgen)${REMOVE}
    ${WGET} ${API}?key=${KEY}\&unique_id=$(uuidgen)${ADD}
    printf -- "%s\n" "Finished." "Record is now:"
    printf -- "%s\n" "$(listINFO)"
  fi
}

deleteINFO()
{
  REMOVE="&cmd=dns-remove_record&record=${DOMAIN}&type=A&value=$(existIP)&"
  printf -- "%s\n" "Preparing to delete ${DOMAIN} record."
  printf -- "%s\n" "Are you sure ?"
  select YN in "Yes" "No"; do
    case "${YN}" in
      "Yes") printf -- "%s\n" "Deleting record:"
        printf -- "%s\n" "$(listINFO)"
        ${WGET} ${API}?key=${KEY}\&unique_id=$(uuidgen)${REMOVE}
        exit ;;
      "No") printf -- "%s\n" "Exiting" ""; failexit ;;
    esac
  done
}

case "${OPTION}" in
  "check") diffINFO ;;
  "update") updateINFO ;;
  "delete") deleteINFO ;;
  "exist") echo $(existIP) ;;
  "list") listINFO ;;
  *) failexit ;;
esac
